# Build from source.
name: build
on: [push, pull_request]
permissions: read-all
jobs:
  build_ubuntu:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
        - architecture: 'x86'
          compiler: 'clang'
          configure_options: ''
        - architecture: 'x64'
          compiler: 'clang'
          configure_options: ''
        - architecture: 'x86'
          compiler: 'gcc'
          configure_options: ''
        - architecture: 'x64'
          compiler: 'gcc'
          configure_options: ''
        - architecture: 'x64'
          compiler: 'gcc'
          configure_options: '--enable-wide-character-type'
        - architecture: 'x64'
          compiler: 'gcc'
          configure_options: '--enable-static-executables=yes --enable-multi-threading-support=no'
    steps:
    - uses: actions/checkout@v4
    - name: Install build dependencies
      run: |
        sudo apt-get -y install autoconf automake autopoint build-essential git libtool pkg-config
    - name: Download test data
      run: |
        if test -x "synctestdata.sh"; then ./synctestdata.sh; fi
    - name: Building from source
      env:
        CC: ${{ matrix.compiler }}
      run: |
        tests/build.sh ${{ matrix.configure_options }}
    - name: Build DLL
      env:
        CC: ${{ matrix.compiler }}
      run: |
        # 假设您使用 gcc 构建 DLL，替换为适当的命令
        gcc -shared -o libyourlibrary.so your_source_file.c -fPIC
    - name: Run tests
      run: |
        tests/runtests.sh
